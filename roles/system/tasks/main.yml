---
- name: "{{ role_name }} | Checking for Distribution Config: {{ ansible_distribution }}"
  ansible.builtin.stat:
    path: "{{ role_path }}/tasks/{{ ansible_distribution }}.yml"
  register: distribution_config

- name: "{{ role_name }} | Run Tasks: {{ ansible_distribution }}"
  ansible.builtin.include_tasks: "{{ ansible_distribution }}.yml"
  when: distribution_config.stat.exists

- name: "{{ role_name }} | Create ~/.config/environment.d"
  ansible.builtin.file:
    mode: "700"
    path: "{{ ansible_user_dir }}/.config/environment.d"
    state: directory

- name: "{{ role_name }} | Set locale"
  ansible.builtin.lineinfile:
    create: true
    dest: "{{ ansible_user_dir }}/.config/environment.d/10-locale.conf"
    line: "{{ item.key | upper }}={{ item.value }}"
    mode: "600"
    regexp: "^{{ item.key | upper }}="
  loop: "{{ system.locale | dict2items }}"

- name: "{{ role_name }} | Set keyboard"
  ansible.builtin.lineinfile:
    create: true
    dest: "{{ ansible_user_dir }}/.config/environment.d/11-keyboard.conf"
    line: "{{ item.key | upper }}={{ item.value }}"
    mode: "600"
    regexp: "^{{ item.key | upper }}="
  loop: "{{ system.keyboard | dict2items }}"

- name: "{{ role_name }} | 1Password operations"
  when: op_installed
  block:
    - name: "{{ role_name }} | Get item ID for {{ ansible_facts.nodename }}"
      ansible.builtin.shell:
        cmd: "op item list --tags ansible/hosts --format json | jq -r '.[] | select(.title == \"{{ ansible_facts.nodename }}\") | .id'"
      register: system_hosts_item_id
      failed_when: false
      changed_when: false

    - name: "{{ role_name }} | Item for {{ ansible_facts.nodename }} exists"
      when: system_hosts_item_id.rc == 0 and system_hosts_item_id.stdout != ""
      block:
        - name: "{{ role_name }} | Get hosts"
          ansible.builtin.shell:
            cmd: "op item get {{ system_hosts_item_id.stdout }} --fields label=notesPlain --format json | jq -r '.value'"
          changed_when: false
          failed_when: false
          register: system_hosts_notesPlain
        
        - name: "{{ role_name }} | Set hosts"
          ansible.builtin.copy:
            content: "{{ system_hosts_notesPlain.stdout }}"
            dest: /etc/hosts
            group: root
            mode: "644"
            owner: root
          when: system_hosts_notesPlain.rc == 0 and system_hosts_notesPlain.stdout != ""
          become: true

- name: "{{ role_name }} | Configure Electron"
  ansible.builtin.copy:
    dest: "{{ ansible_user_dir }}/.config/electron-flags.conf"
    src: electron-flags.conf
